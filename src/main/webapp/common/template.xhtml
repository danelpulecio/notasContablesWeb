<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<f:view xmlns="http://www.w3.org/1999/xhtml"
        xmlns:h="http://xmlns.jcp.org/jsf/html"
        xmlns:ui="http://java.sun.com/jsf/facelets"
        xmlns:f="http://xmlns.jcp.org/jsf/core"
        xmlns:p="http://primefaces.org/ui"
        contentType="text/html">
    <html>
    <h:head>
        <link rel="icon" type="image/jpg" href="${pageContext.request.contextPath}/./common/images/bbva_logo_icon.jpg"/>

        <title>::: SISTEMA DE CONTABILIDAD -- BBVA - Seccion #{title} :::</title>
        <h:outputStylesheet library = "css" name = "theme.css" />
        <h:outputStylesheet library = "css" name = "theme.xcss" />
        <script type="text/javascript">

            function onKeyPressNumbers(e, value) {
                var flag = 0;
                value = replaceAll(value, ',', '');
                var key = window.event ? e.keyCode : e.which;
                if (keyValid(key)) {
                    return true;
                }
                //si ha escrito un punto
                var indPunto = value.indexOf('.');
                //si se han ingresado 13 digitos sin punto, se aborta
                if (value.length == 13) {
                    if (key != 46) {
                        if (indPunto == -1) {
                            return false;
                        }
                    }
                }
                if (indPunto &gt; -1) {
                    //solo se permiten 2 decimales
                    if ((indPunto + 2) &lt; value.length) {
                        return false;
                    }
                }
                var keychar = String.fromCharCode(key);
                if (key &lt; 46 || key &gt; 57) {
                    return false;
                }
                if (key == 47) {
                    return false;
                }
                return true;
            }

            function onKeyPressNumbersNoZero(e, value) {
                var key = window.event ? e.keyCode : e.which;
                if (keyValid(key)) {
                    return true;
                }
                //si se han ingresado 13 digitos sin punto, se aborta
                var keychar = String.fromCharCode(key);
                if (key &lt; 48 || key &gt; 57) {
                    return false;
                }
                return true;
            }

            function keyValid(key) {
                return key == 8 || key == 0;
            }

            function replaceAll(text, busca, reemplaza) {
                while (text.toString().indexOf(busca) != -1)
                    text = text.toString().replace(busca, reemplaza);
                return text;
            }

            function removeAccents(texto,argumento) {

   if (argumento==1) /* Numero Identificacion */
   {
      var retorno = texto.normalize('NFD').replace(/[\u0300-\u036f]/g,"");
      return retorno.replace(/[^\w\s]/gi, ' ');
   }
   else if(argumento==2)    /* Nombres y Apellidos */
   {
      var retorno = texto.normalize('NFD').replace(/[\u0300-\u036f]/g,"");;
      return retorno.replace(/[^\w\s,\u00D1._-]/gi, ' ');
   }
   else if(argumento==3)  /* Correo */
   {
      var retorno = texto.normalize('NFD').replace(/[\u0300-\u036f]/g,"");
      return retorno.replace(/[^\w\s,\u0040._-]/gi, ' ');
   }
   else if(argumento==4) /* Indicativo */
   {
      var retorno = texto.normalize('NFD').replace(/[\u0300-\u036f]/g,"");
      return retorno.replace(/[^\d]/gi, ' ');
   }
   else if(argumento==5) /* Direccion */
   {
      var retorno = texto.normalize('NFD').replace(/[\u0300-\u036f]/g,"");
      return retorno.replace(/[^\w\s,._-]/gi, ' ');
   }
   else if (argumento==6)  /* Descripcion y Outsourcing */
   {
      var retorno = texto.normalize('NFD').replace(/[\u0300-\u036f]/g,"");
      return retorno.replace(/[^\w\s,._-]/gi, ' ');
   }
   else if (argumento==7)  /* Actividad Economica*/
   {
      var retorno = texto.normalize('NFD').replace(/[\u0300-\u036f]/g,"");
      return retorno.replace(/[^\w]/gi, ' ');
   }
   else
   {
      var retorno = texto.normalize('NFD').replace(/[\u0300-\u036f]/g,"");
      return retorno.replace(/[^\w\s,._-]/gi, ' ');
   }
}

function characterRestriction(e,texto) { var k; document.all ? k = e.key : k = e.which;
   if (argumento==1)
   {
      return ((k &gt; 64 &amp;&amp; k &lt; 91) || (k &gt; 96 &amp;&amp; k &lt; 123) || k == 8 || (k &gt;= 48 &amp;&amp; k &lt;= 57));
   }
   else if (argumento==2)
   {
      return ((k &gt; 64 &amp;&amp; k &lt; 91) || (k &gt; 96 &amp;&amp; k &lt; 123) || k == 8 || k == 209 || k == 241 || k == 32 || (k &gt;= 48 &amp;&amp; k &lt;= 57));
   }
   else if (argumento==3)
   {
      return ((k &gt; 63 &amp;&amp; k &lt; 91) || (k &gt; 96 &amp;&amp; k &lt; 123)  || k == 46  || k == 44 || k == 45 || k == 95 || k == 8 ||  k == 32 || (k &gt;= 48 &amp;&amp; k &lt;= 57));
   }
   else if (argumento==4)
   {
         return ( k == 8 || (k &gt;= 48 &amp;&amp; k &lt;= 57));
   }
   else if (argumento==5)
   {
      return ((k &gt; 64 &amp;&amp; k &lt; 91) || (k &gt; 96 &amp;&amp; k &lt; 123)  || k == 46  || k == 44 || k == 45 || k == 95 || k == 8 ||  k == 32 || (k &gt;= 48 &amp;&amp; k &lt;= 57));
   }
   else if (argumento==6)
   {
      return ((k &gt; 64 &amp;&amp; k &lt; 91) || (k &gt; 96 &amp;&amp; k &lt; 123)  || k == 46  || k == 44 || k == 45 || k == 95 || k == 8 || k == 225 || k == 193 || k == 233 || k == 237 || k == 243  || k == 201 || k == 250 || k == 205 || k == 211 || k == 209 || k == 241 || k == 218 || k == 32 || (k &gt;= 48 &amp;&amp; k &lt;= 57));
   }
   else if (argumento==7)
   {
      return ((k &gt; 64 &amp;&amp; k &lt; 91) || (k &gt; 96 &amp;&amp; k &lt; 123)  || k == 46  || k == 44 || k == 45 || k == 95 || k == 8 || k == 225 || k == 193 || k == 233 || k == 237 || k == 243  || k == 201 || k == 250 || k == 205 || k == 211  || k == 218 || k == 32 || (k &gt;= 48 &amp;&amp; k &lt;= 57));
   }
   else
   {
      return ((k &gt; 64 &amp;&amp; k &lt; 91) || (k &gt; 96 &amp;&amp; k &lt; 123)  || k == 46  || k == 44 || k == 45 || k == 95 || k == 8 || k == 225 || k == 193 || k == 233 || k == 237 || k == 243  || k == 201 || k == 250 || k == 205 || k == 211 || k == 209 || k == 241 || k == 218 || k == 32 || (k &gt;= 48 &amp;&amp; k &lt;= 57));
   }
}


            function isDayEnabled(day){
                var fechaMin = document.getElementById('globalForm:fechaMinLibre').value;
                var fechaMax = document.getElementById('globalForm:fechaMaxLibre').value;
                var min=new Date();
                min.setFullYear(parseInt(fechaMin.substring(6, 10), 10),parseInt(fechaMin.substring(3, 5), 10)-1,parseInt(fechaMin.substring(0, 2), 10)-1);
                var max=new Date();
                max.setFullYear(parseInt(fechaMax.substring(6, 10), 10),parseInt(fechaMax.substring(3, 5), 10)-1,parseInt(fechaMax.substring(0, 2), 10));
                var date = new Date(day.date);
                if(date.getDay() == 6){
                    return false;
                }
                if(date.getDay() == 0){
                    return false;
                }
                if(date &gt; min){
                    if(max &gt; date){ //solo fechas entre min y max
                        return true;
                    }
                }
                return false;
            }

            function isDayEnabledRiesgo(day){
                var max=new Date();
                var date = new Date(day.date);
                if(max &gt; date){ //solo fechas menores o iguales a hoy
                    return true;
                }
                return false;
            }

            function getDisabledStyle(day){
                if (!isDayEnabled(day)) return 'rich-calendar-boundary-dates disabledDay';
            }

            function getDisabledStyleRiesgo(day){
                if (!isDayEnabledRiesgo(day)) return 'rich-calendar-boundary-dates disabledDay';
            }

            function validarMontoLibreAlert(value){
                var alertCOP = parseFloat(document.getElementById('globalForm:montoAlertaCOPLibre').value);
                var alertEXT = parseFloat(document.getElementById('globalForm:montoAlertaEXTLibre').value);
                // var divisa = document.getElementById('globalForm:codDivisaNotaContableLibre').value;
                var divisa = PF('codDivisaNotaContableLibre').getSelectedValue();
                var warn=false;
                if(divisa == 'COP'){
                    warn=value &gt; alertCOP;
                }else{
                    warn=value &gt; alertEXT;
                }
                if(warn){
                    alert('Por favor verifique si el importe ingresado es el adecuado.');
                }
            }


        </script>
        <style>
            .disabledDay {
                background-color: #dedede;
            }
        </style>
        <ui:insert name="head"/>
    </h:head>
    <body>

    <div id="layout">
        <p:ajaxStatus onstart="PF('statusPanel').show();"
                      oncomplete="PF('statusPanel').hide();"
                      id="none"/>
        <p:dialog widgetVar="statusPanel" id="statusPanel" modal="true" draggable="false" resizable="false" closable="false"
                  height="100" width="220" appendToBody="true" dynamic="true">
            <h:outputText value="Procesando..."/>
            <div style="width: 100%; text-align: center">
                <p>Un momento por favor...</p>
                <p:graphicImage value="/common/images/loading.gif" alt="Logo - BBVA" width="200"/>
            </div>
        </p:dialog>
        <div id="contenido">
            <h:form id="globalForm">
                <p:outputPanel>
                    <table border="0" cellpadding="0" cellspacing="0" width="250px;" id="datos" style="height:250px;">
                        <tr>
                            <td align="center" bgcolor="#ffffff" valign="top">
                                <ui:include src="/common/menu.xhtml"/>
                                <ui:insert name="body"/>
                            </td>
                        </tr>
                    </table>
                </p:outputPanel>
            </h:form>
        </div>
        <div id="pie">
            <!--
               La version indica NF.0.ME.MC
               donde,
                       NF. Nueva Función
                    ME. Mantenimiento Evolutivo
                    MC. Mantenimiento Correctivo
                        COL514313I000619
                        COL514313I000647
             v.1 1.0.10
             v.1.1.1	COL472313S318150
             v.1.1.2	COL514313I001449
             v.1.1.2	COL514314I011681
             v.1.1.4	COL582614I011829 - Fallo
             v.1.1.5	COL472315S000465
             v.1.1.6	COL472316S007232 - GP12833

             -->
            Notas Contables - Versión 2.0.0<br/>
            BBVA Colombia 2021
        </div>
    </div>
    </body>
    </html>
</f:view>
